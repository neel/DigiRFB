#############################################################################
# Makefile for building: DGRFB
# Generated by qmake (2.01a) (Qt 4.7.0) on: Tue Apr 19 12:00:28 2011
# Project:  digirfb.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"..\..\qt\include\QtCore" -I"..\..\qt\include\QtNetwork" -I"..\..\qt\include\QtGui" -I"..\..\qt\include" -I"..\..\qt\include\ActiveQt" -I"release" -I"..\..\qt\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -mthreads -Wl -Wl,-subsystem,windows
LIBS        =        -L"c:\Qt\2010.05\qt\lib" -lmingw32 -lqtmain -lgdi32 -lQtGui4 -lQtNetwork4 -lQtCore4 
QMAKE         = c:\qt\2010.05\qt\bin\qmake.exe
IDC           = c:\Qt\2010.05\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = resolution.cpp \
		util.cpp \
		rect.cpp \
		commonsocket.cpp \
		packet.cpp \
		messagepacket.cpp \
		screenpacket.cpp \
		clientsocket.cpp \
		main.cpp release\moc_commonsocket.cpp \
		release\moc_clientsocket.cpp
OBJECTS       = release/resolution.o \
		release/util.o \
		release/rect.o \
		release/commonsocket.o \
		release/packet.o \
		release/messagepacket.o \
		release/screenpacket.o \
		release/clientsocket.o \
		release/main.o \
		release/moc_commonsocket.o \
		release/moc_clientsocket.o
DIST          = 
QMAKE_TARGET  = DGRFB
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = DGRFB.exe
DESTDIR_TARGET = release\DGRFB.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.DGRFB.Release  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec ..\..\qt\mkspecs\win32-g++ -o Makefile.Release digirfb.pro

dist:
	$(ZIP) DGRFB.zip $(SOURCES) $(DIST) digirfb.pro ..\..\qt\mkspecs\qconfig.pri ..\..\qt\mkspecs\modules\qt_webkit_version.pri ..\..\qt\mkspecs\features\qt_functions.prf ..\..\qt\mkspecs\features\qt_config.prf ..\..\qt\mkspecs\features\exclusive_builds.prf ..\..\qt\mkspecs\features\default_pre.prf ..\..\qt\mkspecs\features\win32\default_pre.prf ..\..\qt\mkspecs\features\release.prf ..\..\qt\mkspecs\features\debug_and_release.prf ..\..\qt\mkspecs\features\default_post.prf ..\..\qt\mkspecs\features\win32\default_post.prf ..\..\qt\mkspecs\features\build_pass.prf ..\..\qt\mkspecs\features\win32\rtti.prf ..\..\qt\mkspecs\features\win32\exceptions.prf ..\..\qt\mkspecs\features\win32\stl.prf ..\..\qt\mkspecs\features\shared.prf ..\..\qt\mkspecs\features\warn_on.prf ..\..\qt\mkspecs\features\qt.prf ..\..\qt\mkspecs\features\win32\thread.prf ..\..\qt\mkspecs\features\moc.prf ..\..\qt\mkspecs\features\win32\windows.prf ..\..\qt\mkspecs\features\resources.prf ..\..\qt\mkspecs\features\uic.prf ..\..\qt\mkspecs\features\yacc.prf ..\..\qt\mkspecs\features\lex.prf ..\..\qt\mkspecs\features\include_source_dir.prf c:\Qt\2010.05\qt\lib\qtmain.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\resolution.o release\util.o release\rect.o release\commonsocket.o release\packet.o release\messagepacket.o release\screenpacket.o release\clientsocket.o release\main.o release\moc_commonsocket.o release\moc_clientsocket.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_commonsocket.cpp release/moc_clientsocket.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release\moc_commonsocket.cpp release\moc_clientsocket.cpp
release/moc_commonsocket.cpp: packet.h \
		commonsocket.h
	C:\Qt\2010.05\qt\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 commonsocket.h -o release\moc_commonsocket.cpp

release/moc_clientsocket.cpp: commonsocket.h \
		packet.h \
		clientsocket.h
	C:\Qt\2010.05\qt\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 clientsocket.h -o release\moc_clientsocket.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 



####### Compile

release/resolution.o: resolution.cpp resolution.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\resolution.o resolution.cpp

release/util.o: util.cpp util.h \
		rect.h \
		resolution.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\util.o util.cpp

release/rect.o: rect.cpp rect.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\rect.o rect.cpp

release/commonsocket.o: commonsocket.cpp commonsocket.h \
		packet.h \
		messagepacket.h \
		screenpacket.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\commonsocket.o commonsocket.cpp

release/packet.o: packet.cpp packet.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\packet.o packet.cpp

release/messagepacket.o: messagepacket.cpp messagepacket.h \
		packet.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\messagepacket.o messagepacket.cpp

release/screenpacket.o: screenpacket.cpp screenpacket.h \
		packet.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\screenpacket.o screenpacket.cpp

release/clientsocket.o: clientsocket.cpp clientsocket.h \
		commonsocket.h \
		packet.h \
		messagepacket.h \
		screenpacket.h \
		resolution.h \
		util.h \
		rect.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\clientsocket.o clientsocket.cpp

release/main.o: main.cpp clientsocket.h \
		commonsocket.h \
		packet.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release/moc_commonsocket.o: release/moc_commonsocket.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_commonsocket.o release\moc_commonsocket.cpp

release/moc_clientsocket.o: release/moc_clientsocket.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_clientsocket.o release\moc_clientsocket.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

